依赖注入的英文名是：Dependency Injection 简称：DI

hilt框架的好处：就是解耦

hilt依赖注入是在dagger2的基础上进行修改的。
hilt使用的时候在application中添加 一个注解，如下：

@HiltAndroidApp
class MyApplication :Application {
    constructor() : super()
    override fun onCreate() {
        super.onCreate()
    }
}

hilt的注解是专门为Android提供的，所以在需要注解的地方需要加上AndroidEntryPoint(安卓入口点)这个注解，
hitl会在编译期间去寻找这个注解来解析

AndroidEntryPoint这个注解是为android提供的编译入口，在
Hilt 目前支持以下 Android 类：
Application（通过使用 @HiltAndroidApp）
Activity
Fragment
View
Service
BroadcastReceiver
如果您使用 @AndroidEntryPoint 为某个 Android 类添加注释
，则还必须为依赖于该类的 Android 类添加注释。
例如，如果您为某个 Fragment 添加注释，则还必须为使用该 Fragment 的所有 Activity 添加注释。
上一句话的总结就是：假如你为一个类添加了注解，则必须为
依赖这个类的所有的类都得添加注解，依赖这个类的类才有用

注意：在 Hilt 对 Android 类的支持方面还要注意以下几点：
Hilt 仅支持扩展 ComponentActivity 的 Activity，如 AppCompatActivity。
Hilt 仅支持扩展 androidx.Fragment 的 Fragment。
Hilt 不支持保留的 Fragment。

@AndroidEntryPoint 会为项目中的每个 Android 类生成一个单独的 Hilt 组件。
这些组件可以从它们各自的父类接收依赖项，如组件层次结构中所述。

如需从组件获取依赖项，请使用 @Inject （注入的意思） 注释执行字段注入：
总结：在生成hilt的组件层次结构中（使用范围）,只要需要使用这个组件，直接写 @Inject就可以使用了。


组件的作用域：
默认情况下，hilt

组件的作用域有：@singleton @ActivityScoped @FragmentScoped @ViewScoped
每个不同的作用域生成不用的dagger组件，不同的组件生命周期是不同的
@Installn是安装的意思，意思是你这个生成的hilt组件是安装到activity还是其他android类上的
，如果安装到哪里则，在哪里可以用这个







